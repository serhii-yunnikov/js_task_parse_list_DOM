{"version":3,"sources":["scripts/main.js"],"names":["salaryNumber","str","slice","split","join","sortList","item","newUl","document","createElement","sorted","querySelectorAll","sort","a","b","dataset","salary","element","append","body","getEmployees","list","User","userName","position","age","name","listArray","map","innerText","ulItem","getElementsByTagName","listItems"],"mappings":";AAAA,aAgEA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA7DA,SAASA,EAAaC,GACb,OAACA,EAAIC,MAAM,GAAGC,MAAM,KAAKC,KAAK,IAKvC,SAASC,EAASC,GAGVC,IAHgB,EAGhBA,EAAQC,SAASC,cAAc,MAafC,EAAAA,EALP,EAJFF,SAASG,iBAAiB,OAIdC,KAAK,SAACC,EAAGC,GAChCd,OAAAA,EAAac,EAAEC,QAAQC,QAAUhB,EAAaa,EAAEE,QAAQC,WAZpC,IAgBQ,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAnBC,IAAAA,EAAmB,EAAA,MAC5BV,EAAMW,OAAOD,IAjBO,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAsBtBT,SAASW,KAAKD,OAAOX,GAGvB,SAASa,EAAaC,GAEXC,SAAAA,EAAKC,EAAUC,EAAUR,EAAQS,GACnCC,KAAAA,KAAOH,EACPC,KAAAA,SAAWA,EACXR,KAAAA,OAASA,EACTS,KAAAA,IAAMA,EAWNE,OAPW,EAAIN,GAAMO,IAAI,SAAAtB,GAAQ,OAAA,IAAIgB,EAC1ChB,EAAKuB,UACLvB,EAAKS,QAAQS,SACblB,EAAKS,QAAQC,OACbV,EAAKS,QAAQU,OAQjB,IAAMK,EAAStB,SAASuB,qBAAqB,MAGvCC,EAAYxB,SAASG,iBAAiB,MAI5CN,EAASyB,GACTV,EAAaY","file":"main.88cb3c10.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// function returns number from a string\nfunction salaryNumber(str) {\n  return +str.slice(1).split(',').join('');\n}\n\n// function returns sorted list accending salary\n\nfunction sortList(item) {\n  // create empty ul tag\n\n  const newUl = document.createElement('ul');\n\n  // get list collection\n\n  const list = document.querySelectorAll('li');\n\n  // get array with a sorted list\n\n  const sorted = [...list].sort((a, b) =>\n    salaryNumber(b.dataset.salary) - salaryNumber(a.dataset.salary));\n\n  // append sorted li tags in an empty ul\n\n  for (const element of sorted) {\n    newUl.append(element);\n  }\n\n  // append ul in a body\n\n  document.body.append(newUl);\n}\n\nfunction getEmployees(list) {\n  // get template for objects\n  function User(userName, position, salary, age) {\n    this.name = userName;\n    this.position = position;\n    this.salary = salary;\n    this.age = age;\n  }\n\n  // get array of objects\n  const listArray = [...list].map(item => new User(\n    item.innerText,\n    item.dataset.position,\n    item.dataset.salary,\n    item.dataset.age\n  ));\n\n  return listArray;\n}\n\n// get ul element with a list\n\nconst ulItem = document.getElementsByTagName('ul');\n\n// get list collection\nconst listItems = document.querySelectorAll('li');\n\n// call functions\n\nsortList(ulItem);\ngetEmployees(listItems);\n"]}